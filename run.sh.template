# ====================================================================================== #
# Automate submission of jobs to gibbs nodes. This should be run on the head
# node, gibbs.alliance.unm.edu and will call qsub.
# Pass in model file pickle name.
# 
# Author: Eddie Lee, edlee@santafe.edu
# 2020-10-04
# ====================================================================================== #

#!/bin/bash



start_job () {
  tmpfile=$(mktemp -p ./)

  # fill in temp jobfile directions
  cp jobfile_template.sh ${tmpfile}.jobfile.sh\~
  sed -i 's/JOB_NO/'"${1}"'/' ${tmpfile}.jobfile.sh\~
  sed -i 's/INPUTFILE/'"${2}.p"'/' ${tmpfile}.jobfile.sh\~
  sed -i 's/CAN/'"${3}"'/' ${tmpfile}.jobfile.sh\~

  # make directory where results will be saved
  if [ ! -d $2 ]; then
    mkdir $2
  fi

  # start job
  # must manually distribute run files on SFI cluster
  if [ `hostname` = "jalapeno" ]; then
    for HOST in habanero serrano pequin
    do
      rsync -azu ${tmpfile}.jobfile.sh\~ $2 $HOST:~/Dropbox/Research/scotus4/py/
    done
  fi
  if [ `hostname` = "powerhouse" ] || [ `hostname` = "maul" ]; then
    bash ${tmpfile}.jobfile.sh\~
  else
    qsub -V ${tmpfile}.jobfile.sh\~
  fi

  # delete temp run files
  # again must manually handle SFI cluster
  if [ `hostname` = "jalapeno" ]; then
    wait

    for HOST in habanero serrano pequin
    do
      ssh $HOST "rm ~/Dropbox/Research/scotus4/py/${tmpfile} \
                 ~/Dropbox/Research/scotus4/py/${tmpfile}.jobfile.sh\~"
    done
  fi
  rm ${tmpfile} ${tmpfile}.jobfile.sh\~
}

if [ ! -f "${1}.p" ]; then
    echo "Error: File $1.p does not exist."
    exit 1
fi

if [ "$1" == "--dry-run" ]
then
  for i in {1..MX_NODES}
  do
    echo "start_job $i $2 $3"
  done
else
  for i in {1..MX_NODES}
  do
    echo "start_job $i $1 $2"
    start_job $i $1 $2
    sleep 1 

    if [ `hostname` = "powerhouse" ] || [ `hostname` = "maul" ]; then
      wait
    fi
  done
fi
